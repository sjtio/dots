#! /bin/sh

# script may be triggered when e.g. plugging in new monitors,
# so should check that bspwm is being used before running
pgrep -x bspwm > /dev/null || exit

monitors=$(bspc query --names --monitors)
num_monitors=$(echo $monitors | wc -w)
# evenly splits desktops into $num_monitors sets
assignment=$(python - << EOF
desktops = list('qwertyuiop')
# desktops per monitor, number of big monitors
dpm, nbm = divmod(len(desktops), $num_monitors)

for mon in range($num_monitors):
    print(*desktops[mon*dpm + min(mon,nbm):(mon+1)*dpm + min(mon+1,nbm)])
EOF
)

i=1
while read -r desktops; do
    bspc monitor \^$i -d $desktops
    i=$((i+1))
done << EOF
$assignment
EOF


bspc config remove_unplugged_monitors true
bspc config remove_disabled_monitors  true

bspc config left_monocle_padding      200
bspc config right_monocle_padding     200
bspc config single_monocle true

bspc config window_gap                17
bspc config split_ratio               0.54
bspc config gapless_monocle           false
bspc config click_to_focus            none
bspc config initial_polarity          second_child
bspc config automatic_scheme          longest_side
bspc config border_width              3
bspc config normal_border_color       "#928374"
bspc config active_border_color       "#a89984"
bspc config focused_border_color      "#ebdbb2"
bspc config presel_feedback_color     "#458588"
bspc config external_rules_command    "bspwm_external_rules.sh"

if [ "$num_monitors" -eq 1 ]; then
    bspc config pointer_follows_focus false
    bspc config borderless_monocle    true
    bspc config focus_follows_pointer false
else
    bspc config pointer_follows_focus true
    bspc config borderless_monocle    false
    bspc config focus_follows_pointer true
fi

bspc rule --add "st-256color:floating" state=floating
bspc rule --add "Zathura" state=tiled
bspc rule --add "jetbrains-toolbox" state=pseudo_tiled


pgrep -x startplasma-x11 > /dev/null && exit

# wait till polybar dead if running
pgrep -x polybar > /dev/null && polybar-msg cmd quit
while pgrep -x polybar > /dev/null; do sleep 1; done

for m in $monitors; do
    monitor=$m WM=bspwm polybar main &
done
